version: "3"

services:
  db:
    image: postgres:12.5
    environment:
      POSTGRES_PASSWORD: graduatenu
    volumes:
      - graduatenu_data:/var/lib/postgresql/data
    networks:
      - sub-etha
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    networks:
      - sub-etha
    image: "frontend"
  backend:
    environment:
      RAILS_ENV: production
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: graduatenu
      POSTGRES_HOST: db
    depends_on:
      - db
    build:
      context: ./api
      dockerfile: ./Dockerfile.prod
    networks:
      - sub-etha
    image: "backend"
  revproxy:
    depends_on:
      - frontend
      - backend
    build:
      context: .
      dockerfile: ./common/Dockerfile
    networks:
      - sub-etha
    ports:
      - "443:443"
      - "80:80"
    image: "revproxy"
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

networks:
  sub-etha:

volumes:
  graduatenu_data:
